#!/bin/sh
#
# Simple Redis init.d script conceived to work on Linux systems
# as it does use of the /proc filesystem.
# chkconfig:    2345 10 90
# description:  Redis is a persistent key-value database

export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/opt/wy/yyyy/libs"  

REDISPORT=xxxx
bind=zzzz
EXEC=/opt/wy/yyyy/redis-server
CLIEXEC=/opt/wy/yyyy/redis-cli

PIDFILE=/var/run/wy/redis_${REDISPORT}.pid
CONF="/opt/wy/yyyy/${REDISPORT}/${REDISPORT}.conf"

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
                PID=$(cat $PIDFILE)
                if [ -x /proc/${PID} ]
                then
                        echo "$PIDFILE exists, process is already running or crashed"
                else
                        rm -rf $PIDFILE
                        echo "Starting Redis server..."
                        $EXEC $CONF
                        STATUS=$?
                        echo "STATUS:$STATUS"
                fi    
        else
                echo "Starting Redis server..."
                $EXEC $CONF
                STATUS=$?
                echo "STATUS:$STATUS"
        fi
        ;;
    stop)
        PROGRAM=/opt/wy/yyyy/crontab/crontab_$REDISPORT.sh
        CRONTAB_CMD="* * * * * $PROGRAM"
        (crontab -l 2>/dev/null | grep -Fv $PROGRAM; echo "#$CRONTAB_CMD") | crontab - 
        kill -9 `ps -ef |grep $PROGRAM | egrep -v "orc|grep|vi|tail|ksh|ps|killc"| awk '{print $2}'`
        if [ ! -f $PIDFILE ]
        then
                echo "$PIDFILE does not exist, process is not running"
        else
                PID=$(cat $PIDFILE)
                echo "Stopping ..."
                $CLIEXEC -h ${bind} -p $REDISPORT shutdown
                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        
        if [ "$2" = "rm" ];then
                sudo rm -rf /opt/wy/yyyy/${REDISPORT}
        fi
        ;;
   status)
        PID=$(cat $PIDFILE)
        if [ ! -x /proc/${PID} ]
        then
            echo 'Redis is not running'
        else
            echo "Redis is running ($PID)"
        fi
        ;;
    restart)
        if [ -f $PIDFILE ]
        then
                PID=$(cat $PIDFILE)
                if [ -x /proc/${PID} ]
                then
                        $0 stop
                else
                        rm -rf $PIDFILE
                fi
        fi
        $0 start
        ;;
    *)
        echo "Please use start, stop, restart or status as first argument"
        ;;
esac

